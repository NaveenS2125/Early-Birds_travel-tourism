// Load configuration from environment or config file
const path = require('path');

// Environment variable overrides
const config = {
  disableHotReload: process.env.DISABLE_HOT_RELOAD === 'true',
};

module.exports = {
  webpack: {
    alias: {
      '@': path.resolve(__dirname, 'src'),
    },
/*************  ✨ Windsurf Command ⭐  *************/
  /**
   * Configure the webpack configuration object.
   *
   * @param {Object} webpackConfig The current webpack configuration object.
   * @returns {Object} The modified webpack configuration object.
   *
   * This function can be used to modify the webpack configuration object
   * generated by create-react-app. It is passed the current configuration
   * object and should return the modified configuration object.
   *
   * If the environment variable DISABLE_HOT_RELOAD is set to true,
   * this function will disable hot reloading completely by removing
   * the HotModuleReplacementPlugin and disabling watch mode.
   *
   * Otherwise, this function will add some ignored patterns to reduce
   * the number of watched directories.
   */
/*******  91067618-8057-464d-98a1-453722a73580  *******/    configure: (webpackConfig) => {
      
      // Disable hot reload completely if environment variable is set
      if (config.disableHotReload) {
        // Remove hot reload related plugins
        webpackConfig.plugins = webpackConfig.plugins.filter(plugin => {
          return !(plugin.constructor.name === 'HotModuleReplacementPlugin');
        });
        
        // Disable watch mode
        webpackConfig.watch = false;
        webpackConfig.watchOptions = {
          ignored: /.*/, // Ignore all files
        };
      } else {
        // Add ignored patterns to reduce watched directories
        webpackConfig.watchOptions = {
          ...webpackConfig.watchOptions,
          ignored: [
            '**/node_modules/**',
            '**/.git/**',
            '**/build/**',
            '**/dist/**',
            '**/coverage/**',
            '**/public/**',
          ],
        };
      }
      
      return webpackConfig;
    },
  },
};